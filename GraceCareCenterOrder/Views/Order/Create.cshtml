@model CareModels.Orders.OrderCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrderCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.CustId)
        @Html.HiddenFor(model => model.IsCust)

        <div class="form-group">
            @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SlotId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SlotId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SlotId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Deliver, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Deliver)
                    @Html.ValidationMessageFor(model => model.Deliver, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MostWantedNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.MostWantedNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MostWantedNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreezerNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.FreezerNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FreezerNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProduceNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProduceNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProduceNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NonFoodNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NonFoodNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NonFoodNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        @foreach (var catagory in Model.OrderDetailCategoryList)
        {
            <div>
                <h3 style="color:dodgerblue">@Html.DisplayFor(catItem => catagory.CategoryName)</h3>
                @foreach (var subCat in catagory.OrderDetailSubCatList)
                {
                    <div style="text-indent:1.5em;">
                        @if (subCat.SubCatMaxAllowed != 0)
                        {
                            <h4 style="color:deepskyblue;">
                                @Html.DisplayFor(subCatItem => subCat.SubCatName)    &emsp; Max: @Html.DisplayFor(subCatItem => subCat.SubCatMaxAllowed)
                            </h4>
                        }
                        @if (subCat.SubCatMaxAllowed == 0)
                        {
                            <h4 style="color:deepskyblue;">
                                @Html.DisplayFor(subCatItem => subCat.SubCatName)
                            </h4>
                        }
                        <div style="text-indent:1.5em;">
                            <table class="table">
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(itmItem => subCat.OrderDetailItemList[0].ItemName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(itmItem => subCat.OrderDetailItemList[0].PointCost)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(itmItem => subCat.OrderDetailItemList[0].Quantity)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(itmItem => subCat.OrderDetailItemList[0].MaxAllowed)
                                    </th>
                                </tr>
                                @foreach (var itm in subCat.OrderDetailItemList)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(itmItem => itm.ItemName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(itmItem => itm.PointCost)
                                        </td>
                                        <td>
                                            @Html.EditorFor(itmItem => itm.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(itmItem => itm.Quantity, "", new { @class = "text-danger" })
                                            @*@Html.DisplayFor(itmItem => itm.Quantity)*@
                                        </td>
                                        <td>
                                            @if (itm.MaxAllowed != 0)
                                            {@Html.DisplayFor(itmItem => itm.MaxAllowed)}
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
